{"date":"2023-10-14T08:17:11.586Z","level":"error","message":"user validation failed: lastName: Path `lastName` is required., firstName: Path `firstName` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-10-14T08:33:12.180Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-10-14T08:33:12.185Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype],\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: {},\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 12,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T08:33:32.390Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T08:34:02.889Z","level":"error","message":"secretOrPrivateKey must have a value","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T08:34:38.168Z","level":"error","message":"secretOrPrivateKey must have a value","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T08:34:50.748Z","level":"error","message":"secretOrPrivateKey must have a value","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:03:04.655Z","level":"error","message":"Role already exists by this name","method":"POST","service":"user-service","url":"/createRole"}
{"date":"2023-10-14T09:18:19.931Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:21:04.063Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-10-14T09:21:04.067Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype],\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 22,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:21:24.032Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-10-14T09:21:24.034Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype],\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 22,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:22:13.898Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-10-14T09:22:13.899Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype],\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 22,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:23:20.190Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-10-14T09:23:20.197Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype],\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 22,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:24:00.420Z","level":"error","message":"User does not exist","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:25:32.565Z","level":"error","message":"User does not exist","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:25:41.178Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:26:14.190Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:26:22.301Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-14T09:42:44.744Z","level":"error","message":"getaddrinfo ENOTFOUND ac-4tmgxlw-shard-00-01.apvgk4z.mongodb.net","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-15T14:13:51.025Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-15T15:19:18.468Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-15T15:53:23.025Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-15T16:55:56.247Z","level":"error","message":"Cannot read properties of undefined (reading 'setHours')","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-15T16:56:27.457Z","level":"error","message":"start.setHours is not a function","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-15T16:59:29.800Z","level":"error","message":"unknown top level operator: $gte. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-15T19:14:15.453Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-15T19:21:49.595Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-25T19:25:32.770Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T19:25:33.625Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T19:25:33.947Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T19:25:32.534Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T19:39:29.428Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T19:39:30.980Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T19:39:31.883Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T19:39:31.894Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:05.831Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:21.030Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:31.745Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:32.770Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:33.037Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:34.125Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:54.865Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:54.866Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:56.595Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:26:56.610Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:41:40.467Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:42:17.931Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:42:52.034Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:44:28.491Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:46:45.091Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:46:56.941Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:47:00.864Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:47:28.636Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:49:03.290Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:49:27.434Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:51:00.181Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:51:48.324Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:52:54.624Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:54:58.626Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:54:58.843Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:55:53.884Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:57:43.032Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T20:58:49.730Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T21:00:14.139Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T21:01:28.181Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-25T21:03:06.220Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-26T17:05:01.017Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-26T17:05:02.272Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-26T17:05:03.614Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-26T17:05:06.460Z","level":"error","message":"Error fetching orders: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-26T18:12:36.249Z","level":"error","message":"obj is not defined","method":"GET","service":"user-service","url":"/getOrderStatusByEmployees"}
{"date":"2023-10-26T19:38:58.554Z","level":"error","message":"User does not exist","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-10-27T14:58:04.861Z","level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-27T15:32:07.171Z","level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-30T20:36:37.230Z","level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-30T20:36:37.492Z","level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-30T20:36:39.465Z","level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-30T20:36:41.505Z","level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-31T16:56:01.751Z","level":"error","message":"Cannot access 'from' before initialization","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-31T16:56:25.816Z","level":"error","message":"Error getting wareIQ orders from Panel: Request failed with status code 500","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-31T16:57:02.476Z","level":"error","message":"Error getting wareIQ orders from Panel: Request failed with status code 500","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-31T16:57:47.836Z","level":"error","message":"Error getting wareIQ orders from Panel: Request failed with status code 500","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-31T16:58:22.757Z","level":"error","message":"Error getting wareIQ orders from Panel: Request failed with status code 500","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-10-31T18:42:13.220Z","level":"error","message":"Error getting wareIQ orders from Panel: Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-01T15:25:24.508Z","level":"error","message":"Operation `orders.count()` buffering timed out after 10000ms","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-01T15:27:15.691Z","level":"error","message":"Cannot access 'start' before initialization","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-01T15:39:30.538Z","level":"error","message":"Error getting wareIQ orders from Panel: getaddrinfo ENOTFOUND track.wareiq.com","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-01T15:40:35.348Z","level":"error","message":"Error getting wareIQ orders from Panel: getaddrinfo ENOTFOUND track.wareiq.com","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-01T15:42:34.834Z","level":"error","message":"wareOrders?.forEach is not a function","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-01T16:35:15.656Z","level":"error","message":"Error getting wareIQ orders from Panel: \"ids\"?.join is not a function","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-02T16:01:29.657Z","level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-03T16:30:51.365Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-03T19:07:33.747Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-03T19:10:04.229Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-03T19:10:30.286Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-09T16:45:52.354Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-09T17:42:29.137Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-09T18:25:19.252Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-09T18:25:25.169Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-09T18:25:32.699Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-09T18:25:33.485Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-10T18:31:23.799Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-10T18:31:24.189Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-10T18:31:25.721Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-10T18:31:28.894Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-10T19:41:09.606Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-10T19:42:08.334Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-10T19:42:08.589Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-11T19:37:42.063Z","level":"error","message":"Request failed with status code 403","method":"POST","service":"user-service","url":"/getOrders"}
{"date":"2023-11-25T16:22:42.673Z","level":"error","message":"user validation failed: lastName: Path `lastName` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-11-25T16:25:00.068Z","level":"error","message":"Cannot read properties of null (reading '_id')","method":"POST","service":"user-service","url":"/createRole"}
{"date":"2023-11-25T16:26:14.691Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-11-28T20:08:20.261Z","level":"error","message":"User does not exist","method":"POST","service":"user-service","url":"/login"}
